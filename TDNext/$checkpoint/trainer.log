2023-03-04 10:39:10 [/root/SpEx1/libs/trainer.py:78 - INFO ] Model summary:
SpEx_Plus(
  (encoder_1d_short): Conv1D(1, 256, kernel_size=(20,), stride=(10,))
  (encoder_1d_middle): Conv1D(1, 256, kernel_size=(40,), stride=(10,))
  (encoder_1d_long): Conv1D(1, 256, kernel_size=(80,), stride=(10,))
  (ln): ChannelwiseLayerNorm((768,), eps=1e-05, elementwise_affine=True)
  (proj): Conv1D(768, 160, kernel_size=(1,), stride=(1,))
  (conv_block_1): TCNBlock_Spk_next(
    (dconv): Conv1d(416, 416, kernel_size=(7,), stride=(1,), padding=(3,), groups=416)
    (norm1): GlobalLayerNorm(416, eps=1e-05, elementwise_affine=True)
    (conv1x1): Conv1D(416, 320, kernel_size=(1,), stride=(1,))
    (prelu1): PReLU(num_parameters=1)
    (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
  )
  (conv_block_1_other): Sequential(
    (0): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(6,), dilation=(2,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (1): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(12,), dilation=(4,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (2): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(24,), dilation=(8,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (3): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(48,), dilation=(16,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (4): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(96,), dilation=(32,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (5): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(192,), dilation=(64,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (6): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(384,), dilation=(128,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
  )
  (conv_block_2): TCNBlock_Spk(
    (conv1x1): Conv1D(512, 512, kernel_size=(1,), stride=(1,))
    (prelu1): PReLU(num_parameters=1)
    (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
    (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), groups=512)
    (prelu2): PReLU(num_parameters=1)
    (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
    (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
  )
  (conv_block_2_other): Sequential(
    (0): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (1): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (2): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (3): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (4): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (5): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (6): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
  )
  (conv_block_3): TCNBlock_Spk(
    (conv1x1): Conv1D(512, 512, kernel_size=(1,), stride=(1,))
    (prelu1): PReLU(num_parameters=1)
    (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
    (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), groups=512)
    (prelu2): PReLU(num_parameters=1)
    (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
    (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
  )
  (conv_block_3_other): Sequential(
    (0): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (1): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (2): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (3): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (4): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (5): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (6): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
  )
  (conv_block_4): TCNBlock_Spk(
    (conv1x1): Conv1D(512, 512, kernel_size=(1,), stride=(1,))
    (prelu1): PReLU(num_parameters=1)
    (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
    (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), groups=512)
    (prelu2): PReLU(num_parameters=1)
    (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
    (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
  )
  (conv_block_4_other): Sequential(
    (0): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (1): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (2): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (3): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (4): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(32,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (5): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(64,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
    (6): TCNBlock(
      (conv1x1): Conv1D(256, 512, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (norm1): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (dconv): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(128,), dilation=(128,), groups=512)
      (prelu2): PReLU(num_parameters=1)
      (norm2): GlobalLayerNorm(512, eps=1e-05, elementwise_affine=True)
      (sconv): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    )
  )
  (conv_block_5): TCNBlock_Spk_next(
    (dconv): Conv1d(416, 416, kernel_size=(7,), stride=(1,), padding=(3,), groups=416)
    (norm1): GlobalLayerNorm(416, eps=1e-05, elementwise_affine=True)
    (conv1x1): Conv1D(416, 320, kernel_size=(1,), stride=(1,))
    (prelu1): PReLU(num_parameters=1)
    (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
  )
  (conv_block_5_other): Sequential(
    (0): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(6,), dilation=(2,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (1): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(12,), dilation=(4,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (2): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(24,), dilation=(8,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (3): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(48,), dilation=(16,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (4): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(96,), dilation=(32,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (5): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(192,), dilation=(64,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
    (6): TCNBlock_next(
      (dconv): Conv1d(160, 160, kernel_size=(7,), stride=(1,), padding=(384,), dilation=(128,), groups=160)
      (norm1): GlobalLayerNorm(160, eps=1e-05, elementwise_affine=True)
      (conv1x1): Conv1D(160, 320, kernel_size=(1,), stride=(1,))
      (prelu1): PReLU(num_parameters=1)
      (sconv): Conv1d(320, 160, kernel_size=(1,), stride=(1,))
    )
  )
  (mask1): Conv1D(160, 256, kernel_size=(1,), stride=(1,))
  (mask2): Conv1D(160, 256, kernel_size=(1,), stride=(1,))
  (mask3): Conv1D(160, 256, kernel_size=(1,), stride=(1,))
  (decoder_1d_short): ConvTrans1D(256, 1, kernel_size=(20,), stride=(10,))
  (decoder_1d_middle): ConvTrans1D(256, 1, kernel_size=(40,), stride=(10,))
  (decoder_1d_long): ConvTrans1D(256, 1, kernel_size=(80,), stride=(10,))
  (conv1_r): Conv1D(160, 256, kernel_size=(1,), stride=(1,))
  (conv2_r): Conv1D(256, 160, kernel_size=(1,), stride=(1,))
  (spk_encoder): Spk_Encoder(
    (norm1): ChannelwiseLayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (conv1x1_1): Conv1d(768, 128, kernel_size=(1,), stride=(1,))
    (spk_block1): Spk_Block(
      (conv1x1_1): Conv1d(128, 384, kernel_size=(1,), stride=(1,))
      (rule1): ReLU()
      (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (dconv): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), groups=128)
      (conv1x1_2): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
      (se_block): SE_Block(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=128, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=128, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (spk_block2): Spk_Block(
      (conv1x1_1): Conv1d(128, 384, kernel_size=(1,), stride=(1,))
      (rule1): ReLU()
      (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (dconv): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), groups=128)
      (conv1x1_2): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
      (se_block): SE_Block(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=128, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=128, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (spk_block3): Spk_Block(
      (conv1x1_1): Conv1d(128, 384, kernel_size=(1,), stride=(1,))
      (rule1): ReLU()
      (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (dconv): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), groups=128)
      (conv1x1_2): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
      (se_block): SE_Block(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=128, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=128, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (spk_block4): Spk_Block(
      (conv1x1_1): Conv1d(128, 384, kernel_size=(1,), stride=(1,))
      (rule1): ReLU()
      (norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (dconv): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), groups=128)
      (conv1x1_2): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
      (se_block): SE_Block(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=128, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=128, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (conv1x1_2): Conv1d(128, 256, kernel_size=(1,), stride=(1,))
    (maxpool): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
  )
  (pred_linear): Linear(in_features=256, out_features=250, bias=True)
)
2023-03-04 10:39:10 [/root/SpEx1/libs/trainer.py:80 - INFO ] Loading model to GPUs:(0,), #param: 9.64M
2023-03-04 10:39:11 [/root/SpEx1/libs/trainer.py:126 - INFO ] Set eval mode...
